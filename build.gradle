/**
 * Copyright (C) 2013-2014 Open Solutions for Java
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// *****************************************************************************
//
// *****************************************************************************

buildscript {
    repositories {
    }

    dependencies {
    }
}

// *****************************************************************************
//
// *****************************************************************************

allprojects {
}

subprojects {

    apply plugin: 'groovy'
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    project.sourceCompatibility = 1.7

    project.version =             '1.1.3.SNAPSHOT'
    project.group =               'org.oss4j.samples.groovy'
    project.ext.prefix =          'oss4j-groovy-samples'

    project.ext.groovyVersion           = '2.1.5'
    project.ext.junitVersion            = '4.11'

    // *****************************************************************************
    //
    // *****************************************************************************

    // Gradle performs compileJava before compileGroovy. It means, the java classes (placed under src/*/java)
    // can not reference any groovy class. We should instruct gradle to use all files as groovy classes.
    // (http://gradle.1045684.n5.nabble.com/Groovy-Java-mixed-codebase-td1435484.html)
    // TODO: find a better solution
    sourceSets {
        main {
            java { srcDirs = []} // no source dirs
            //groovy { srcDir 'src/main' } // includes all .groovy and .java files under src
            groovy {
                srcDirs = [
                    'src/main/java',
                    'src/main/groovy'
                ]
            } // includes all .groovy and .java files under src
        }

        test {
            java { srcDirs = []} // no source dirs
            //groovy { srcDir 'src/test' } // includes all .groovy and .java files under src
            groovy {
                srcDirs = [
                    'src/test/java',
                    'src/test/groovy'
                ]
            } // includes all .groovy and .java files under src
        }
    }

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {

    }

    // custom tasks for creating source jar
    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    // custom tasks for creating javadoc jar
    task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    // custom tasks for creating test jar
    task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output
    }

    // add the jars as artifacts
    artifacts {
        archives sourcesJar
        archives javadocJar
        archives testJar
    }
}

// *****************************************************************************
//
// *****************************************************************************


task wrapper(type: Wrapper) { gradleVersion = '1.10' }